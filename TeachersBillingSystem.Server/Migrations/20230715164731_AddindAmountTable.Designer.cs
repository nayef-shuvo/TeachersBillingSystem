// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeachersBillingSystem.Server.Data;

#nullable disable

namespace TeachersBillingSystem.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230715164731_AddindAmountTable")]
    partial class AddindAmountTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("TeachersBillingSystem.Server.Models.Amount", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<uint>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.ToTable("Amounts");

                    b.HasData(
                        new
                        {
                            Name = "theory",
                            Value = 2000u
                        },
                        new
                        {
                            Name = "classTest",
                            Value = 300u
                        },
                        new
                        {
                            Name = "questionModeration",
                            Value = 2500u
                        },
                        new
                        {
                            Name = "examPaperEvalSenester",
                            Value = 120u
                        },
                        new
                        {
                            Name = "examPaperEvalSemesterFour",
                            Value = 150u
                        },
                        new
                        {
                            Name = "viva",
                            Value = 60u
                        },
                        new
                        {
                            Name = "vivaOfficer",
                            Value = 400u
                        },
                        new
                        {
                            Name = "vivaOfficeAssistant",
                            Value = 350u
                        },
                        new
                        {
                            Name = "labAttendant",
                            Value = 250u
                        },
                        new
                        {
                            Name = "labQuestion",
                            Value = 600u
                        },
                        new
                        {
                            Name = "labReport",
                            Value = 40u
                        },
                        new
                        {
                            Name = "survey",
                            Value = 12000u
                        },
                        new
                        {
                            Name = "tabulationFirst",
                            Value = 70u
                        },
                        new
                        {
                            Name = "tabulationSecond",
                            Value = 75u
                        },
                        new
                        {
                            Name = "tabulationThird",
                            Value = 80u
                        },
                        new
                        {
                            Name = "tabulationFourth",
                            Value = 90u
                        },
                        new
                        {
                            Name = "gradeSheetEval",
                            Value = 350u
                        },
                        new
                        {
                            Name = "theoryQuestCompose",
                            Value = 400u
                        },
                        new
                        {
                            Name = "theoryQuestModeration",
                            Value = 200u
                        },
                        new
                        {
                            Name = "theoryQuestPhotocopy",
                            Value = 25u
                        },
                        new
                        {
                            Name = "labHeadExamineer",
                            Value = 600u
                        },
                        new
                        {
                            Name = "invigilator",
                            Value = 500u
                        },
                        new
                        {
                            Name = "examController",
                            Value = 2700u
                        },
                        new
                        {
                            Name = "subExamController",
                            Value = 2200u
                        },
                        new
                        {
                            Name = "assistantController",
                            Value = 1600u
                        },
                        new
                        {
                            Name = "officer",
                            Value = 150u
                        },
                        new
                        {
                            Name = "labAssistant",
                            Value = 100u
                        },
                        new
                        {
                            Name = "labAttendantLab",
                            Value = 90u
                        },
                        new
                        {
                            Name = "labCommitteePresident",
                            Value = 2000u
                        },
                        new
                        {
                            Name = "supervisor",
                            Value = 5000u
                        },
                        new
                        {
                            Name = "thesisExaminee",
                            Value = 1500u
                        },
                        new
                        {
                            Name = "thesisViva",
                            Value = 150u
                        },
                        new
                        {
                            Name = "examCommitteeMember",
                            Value = 2500u
                        },
                        new
                        {
                            Name = "examCommitteePresident",
                            Value = 4000u
                        },
                        new
                        {
                            Name = "dean",
                            Value = 6000u
                        },
                        new
                        {
                            Name = "deptChairman",
                            Value = 5500u
                        });
                });

            modelBuilder.Entity("TeachersBillingSystem.Server.Models.Auth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Auths");
                });

            modelBuilder.Entity("TeachersBillingSystem.Server.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("NameBengali")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("TeachersBillingSystem.Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
